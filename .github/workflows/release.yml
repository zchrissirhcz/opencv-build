name: release
#on: [push, pull_request]
on:
  push:
    tags:
      - '*'

jobs:
  setup:
    runs-on: windows-2019
    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}
    steps:
    - name: get-version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

  opencv-vs2019:
    runs-on: windows-2019
    env:
      OPENCV_VERSION: 4.5.3
      PACKAGENAME: opencv-4.5.3-vc16
    steps:
    - uses: actions/checkout@v2
    - name: opencv-source
      # run: |
      #   Invoke-WebRequest -Uri https://github.com/opencv/opencv/archive/${{ env.OPENCV_VERSION }}.zip -OutFile opencv-${{ env.OPENCV_VERSION }}.zip
      #   7z x ./opencv-${{ env.OPENCV_VERSION }}.zip
      #   cd opencv-${{ env.OPENCV_VERSION }}
      #   Remove-Item 'modules\gapi' -Recurse // remove gapi, thus won't download and install ade
      run: |
        Invoke-WebRequest -Uri https://github.com/opencv/opencv/archive/${{ env.OPENCV_VERSION }}.zip -OutFile opencv-${{ env.OPENCV_VERSION }}.zip
        7z x ./opencv-${{ env.OPENCV_VERSION }}.zip
        cd opencv-${{ env.OPENCV_VERSION }}
    - name: build-vs2019-x64
      run: >-
        cd opencv-${{ env.OPENCV_VERSION }} &&
        mkdir build-vs2019-x64 && cd build-vs2019-x64 &&
        cmake .. -G "Visual Studio 16 2019" -A x64 -DCMAKE_INSTALL_PREFIX=install $(type ..\..\options\opencv-4.5-windows.txt) &&
        cmake --build . --config Release -j 2 &&
        cmake --install . --config Release
    - name: build-vs2019-x86
      run: >-
        cd opencv-${{ env.OPENCV_VERSION }} &&
        mkdir build-vs2019-x86 && cd build-vs2019-x86 &&
        cmake .. -G "Visual Studio 16 2019" -A Win32 -DCMAKE_INSTALL_PREFIX=install $(type ..\..\options\opencv-4.5-windows.txt) &&
        cmake --build . --config Release -j 2 &&
        cmake --install . --config Release
    - name: package
      run: |
        mkdir ${{ env.PACKAGENAME }}
        Copy-Item -Verbose -Recurse -Force -Path "opencv-${{ env.OPENCV_VERSION }}\build-vs2019-x64\install\*" -Destination "${{ env.PACKAGENAME }}"
        Copy-Item -Verbose -Recurse -Force -Path "opencv-${{ env.OPENCV_VERSION }}\build-vs2019-x86\install\*" -Destination "${{ env.PACKAGENAME }}"
        7z a -r ${{ env.PACKAGENAME }}.zip ${{ env.PACKAGENAME }}
    - name: upload
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip

  release:
    needs: [setup, opencv-vs2019]
    runs-on: windows-2019
    steps:
    - name: download
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: create-release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        #tag_name: ${{ needs.setup.outputs.VERSION }}
        tag_name: v5
        release_name: Release ${{ needs.setup.outputs.VERSION }}
        draft: false
        prerelease: false
    
    - name: upload-vs2019
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PACKAGENAME: opencv-4.5.3-vc16
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/${{ env.PACKAGENAME }}/${{ env.PACKAGENAME }}.zip
        asset_name: ${{ env.PACKAGENAME }}.zip
        asset_content_type: application/zip
